{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <p>qweqweqweqwe</p>"},{"location":"OpenTripPlanner/","title":"OTP","text":""},{"location":"OpenTripPlanner/#gisday-2024","title":"GISday 2024","text":"<p>STRONA W BUDOWIE</p>"},{"location":"OpenTripPlanner/#wstep","title":"Wst\u0119p","text":"<p>To repozytorium zawiera prezentacje wyg\u0142oszon\u0105 na wydarzeniu GISday 2024 na Uniwersytecie \u0141\u00f3dzkim na wydziale Ekonomiczno - socjologicznym. Prezentacja zosta\u0142a podzielona na 3 cz\u0119\u015bci i zawiera informacje odno\u015bnie u\u017cytkowania 3 narz\u0119dzi do analiz komunikacyjnych w \u015brodowisku GIS.</p> <ol> <li>Narz\u0119dzia wbudowane w QGIS + wtyczki</li> <li>OpenTripPlanner + R</li> <li>Narz\u0119dzia symulacyjne VISSIM + TomTomMOVE</li> </ol>"},{"location":"OpenTripPlanner/#narzedzia-wbudowane-w-qgis-wtyczki","title":"Narz\u0119dzia wbudowane w QGIS + wtyczki","text":"<p>W pierwszej cz\u0119\u015bci prezentacji zosta\u0142y om\u00f3wione bazowe funkcje QGIS, takie jak korzystanie z bufora lub polecenia service area w celu wyznaczenia realnej drogi do przystanku.</p> <p>Nast\u0119pnie przedstawiona zosta\u0142a funkcjonalno\u015b\u0107 wtyczek OpenRouteService, Valhalla oraz TravelTime  w zakresie routingu, tworzenia analiz sieciowych i izochron. Wszystkie wtyczki oferuj\u0105 wyb\u00f3r r\u00f3\u017cnych rodzaj\u00f3w transportu przy wyznaczaniu izochrony, jednak tylko TravelTime daje mo\u017cliwo\u015b\u0107 wyboru generowania izochron od transportu publicznego.  Niestety wad\u0105 tej wtyczki jest bardzo ma\u0142a ilo\u015b\u0107 token\u00f3w, kt\u00f3r\u0105 mo\u017cemy wykorzystywa\u0107 do zapyta\u0144 serwera. Each API key has a quota of queries that can be done. Currently, for free keys, this is around 10 searches / minute. Once this quota is reached, all subsequent queries fail for the cooldown period</p> <p>Podsumowuj\u0105c, narz\u0119dzia wbudowane oraz wtyczki s\u0105 to narz\u0119dzia szybko dzia\u0142aj\u0105ce oraz bardzo proste w obs\u0142udze. Ogarniczenia jakie dotycz\u0105 tych narz\u0119dzi to ma\u0142a liczba zapyta\u0144 do API i zale\u017cno\u015b\u0107 od danych z zewn\u0119trznego serwera oraz ograniczone mo\u017cliwo\u015bci zaawansowanych analiz multimodalnych. Bior\u0105c pod uwag\u0119 zalety oraz wady tych narz\u0119dzi znajduj\u0105 one zastosowanie w prostych analizach oraz przy ma\u0142ym obszarze opracowania.</p>"},{"location":"OpenTripPlanner/#opentripplanner-r","title":"OpenTripPlanner + R","text":"<p>W budowie</p>"},{"location":"OpenTripPlanner/#pobieranie-danych","title":"Pobieranie danych","text":"<p>Przed przyst\u0105pieniem do analiz zostanie om\u00f3wione w jaki spos\u00f3b pozyska\u0107 dane potrzebne do przeprowadzenia oblicze\u0144.</p> <p>Potrzebne b\u0119d\u0105 nam dwie podstawowe rzeczy:</p> <ol> <li>Dane o rozk\u0142adach jazdy przewo\u017anik\u00f3w w formacie GTFS</li> <li>Mapa drogowa w formacie osm.pbf</li> </ol> <p>Dane o przewo\u017anikach mo\u017cemy pozyska\u0107 z dw\u00f3ch r\u00f3\u017cnych \u017ar\u00f3de\u0142:</p> <ol> <li>Transitland</li> <li>Mobility Database Ja swoje dane dla \u0142odzi pobra\u0142em z tej strony</li> </ol> <p>Kiedy mamy dane dotycz\u0105ce rozk\u0142ad\u00f3w jazdy nast\u0119pnym krokiem b\u0119dzie pobranie informacji o sieci drogowej OSM z serwera Geofabrik. W tej analizie u\u017cy\u0142em danych dla wojew\u00f3dztwa \u0142\u00f3dzkiego</p>"},{"location":"OpenTripPlanner/#konfiguracja-serwera-otp","title":"Konfiguracja serwera OTP","text":"<p>Po pobraniu danych przejdziemy do konfiguracji serwera oraz \u015brodowiska. Pierwszy krok to pobranie pliku aplikacji OTP w formacie .jar w wersji 1.5.0. Do uruchomienia tej aplikacji potrzebne b\u0119dzie nam \u015brodowisko JAVA w wersji 8 Nast\u0119pnie potrzebujemy zainstalowa\u0107 j\u0119zyk R oraz interfejs RStudio</p> <p>Kiedy mamy pobrane i zainstalowane wszystkie komponenty przejdzmy do konfiguracji folderu w kt\u00f3rym b\u0119dziemy pracowa\u0107. Powinni\u015bmy stworzy\u0107 folder, do kt\u00f3rego b\u0119dziemy mieli szybki dost\u0119p, bez polskich znak\u00f3w i spacji w nazwie, poniewa\u017c mo\u017ce to spowodowa\u0107 b\u0142\u0105d w \u015bcie\u017cce dost\u0119pu. Ja sw\u00f3j folder stworzy\u0142em w lokalizacji: <code>C:\\Users\\Michal\\otp_data</code>. To b\u0119dzie nasz folder g\u0142\u00f3wny z plikiem <code>.jar</code>, w tym folderze g\u0142\u00f3wnym tworzymy nowy folder <code>graphs</code>, folder nazwany tak\u0105 nazw\u0105 jest rozpoznawany jako tzw. <code>router</code>, b\u0119dzie nam to potrzebne w dalszej cz\u0119\u015bci analizy. W folderze <code>graphs</code> tworzymy nowy folder w kt\u00f3rym b\u0119dziemy przechowywa\u0107 plik <code>gtfs.zip</code> i <code>.osm.pbf</code>. (Plik z rozk\u0142adami jazdy musi zawiera\u0107 w nazwie GTFS oraz musi mie\u0107 rozszerzenie .zip. Plik z map\u0105 osm r\u00f3wnie\u017c musi by\u0107 w formacie .osm.pbf) Folder mo\u017cemy go nazwa\u0107 od nazwy analizowanej miejscowo\u015bci np. <code>Lodz</code>, w takim wypadku nazwa <code>Lodz</code> stanie si\u0119 nazw\u0105 <code>routera</code> i b\u0119dzi\u0119 mo\u017cna go w ten spos\u00f3b wywo\u0142a\u0107. Struktura folderu powinna wygl\u0105da\u0107 w taki spos\u00f3b: <pre><code>/otp_data\n    otp.jar\n    /graphs\n        /lodz\n        lodz_gtfs.zip\n        lodz.osm.pbf\n</code></pre> Po skonfigurowaniu struktury folderu przejdziemy do uruchomienia aplikacji z command line, potrzebne b\u0119d\u0105 nam do tego 3 podstawowe komendy <pre><code>java -Xmx4G -jar otp.jar --build C:\\Users\\Michal\\otp_data\\graphs\\lodz\n</code></pre> Ta komenda buduje <code>graph</code> i zapisuje do pliku <code>.obj</code>, przechowywane s\u0105 tam dane na temat sieci drogowej oraz na\u0142o\u017cone trasy \u015brodk\u00f3w transportu publicznego. Plik zostanie odrazu dodany do folderu <code>lodz</code></p> <p>Nast\u0119pnie wpisujemy komende do uruchomienia serwera. <pre><code>java -Xmx4G -jar otp.jar --router lodz --graphs graphs --server\n</code></pre> Jako router wskazujemy folder <code>lodz</code>, parametr <code>--graphs</code> wskazuje w jakim folderze aplikacja ma szuka\u0107 zapisanego graphu. parametr <code>--server</code> uruchamia serwer, do kt\u00f3rego b\u0119dzie mogli wys\u0142a\u0107 zapytanie.</p> <p>Trzecia komenda potrzebna b\u0119dzie nam w dalszej cz\u0119\u015bci analizy <pre><code>java -Xmx4G -jar otp.jar --router lodz --graphs graphs --server\n--analyst\n--pointSets C:\\Users\\Michal\\otp_data\\\n</code></pre> parametr <code>--analyst</code> rozszerza mo\u017cliwo\u015bci aplikacji o dodatkowe analizy, a <code>--pointSets</code> pozwala nam doda\u0107 punkty w formacie tabeli z roszerzeniem <code>.csv</code>, kt\u00f3rych b\u0119dziemy mogli p\u00f3\u017aniej u\u017cy\u0107.</p> <p>Je\u017celi uda\u0142o nam si\u0119 wszystko zrobi\u0107 zgodnie z instrukcj\u0105 na ko\u0144cu wiersza polece\u0144 powinni\u015bmy dosta\u0107 komunikat  <code>Grizzly server running</code></p> <p>B\u0119dziemy mogli si\u0119 do niego pod\u0142\u0105czy\u0107 poprzez wpisanie w przegl\u0105dark\u0119 localhost:8080</p> <p>Z serwera OTP mo\u017cemy korzysta\u0107 z funkcji przegl\u0105dania jak i wpisywania zapyta\u0144 bezpo\u015brednio z poziomu przegl\u0105darki internetowej, jednak jest to spos\u00f3b wysoce nieefektywny i nara\u017cony na mo\u017cliwo\u015b\u0107 \u0142atwego pope\u0142niania b\u0142\u0119d\u00f3w w sk\u0142adni zapytania, dlatego do generowania zapyta\u0144 b\u0119dziemy u\u017cywa\u0107 j\u0119zyka R i RStudio.</p>"},{"location":"OpenTripPlanner/#skrypty-w-jezyku-r","title":"Skrypty w j\u0119zyku R","text":""},{"location":"OpenTripPlanner/#izochorny","title":"Izochorny","text":"<p>Po uruchomieniu RStudio b\u0119dziemy musieli zainstalowa\u0107 bibliotek\u0119 <code>otpr</code> by m\u00f3c jej u\u017cywa\u0107 <pre><code>install.packages('otpr') # Instalacja biblioteka otpr\n</code></pre> Kod poni\u017cej zwr\u00f3ci nam izochorny dojazdu komunikacj\u0105 miejsk\u0105 w odst\u0119pach czasowych 15, 30 i 45minut i zapisze do pliku geojson <pre><code>library(\"otpr\") # Za\u0142adowanie biblioteki otpr\n\nsetwd(\"C:/Users/Michal/otp_data\") # Ustawienie folderu roboczego\notpcon &lt;- otp_connect() # Po\u0142\u0105czenie si\u0119 z API\nmy_isochrone &lt;- otp_get_isochrone(otpcon,\n                location = c(51.7474, 19.4518), # Wskazanie punktu pocz\u0105tkowego w stopniach\n                fromLocation = FALSE, # Analiza DO punktu pocz\u0105tkowego\n                cutoffs = c(900, 1800, 2700), # Ustawienie wielko\u015bci izochron 15, 30, 45 min\n                mode = \"TRANSIT\", # Ustawienie \u015brodka transportu\n                date = \"11-22-2024\",\n                time = \"08:30:00\",\n                maxWalkDistance = 700) # Maksymalna odlego\u015b\u0107 piesza z i na przystanek\nwrite(my_isochrone$response, file = \"my_isochrone.geojson\") # Zapisanie odpowiedzi serwera do pliku \n</code></pre> Mapa wynikowa wygl\u0105da w nast\u0119puj\u0105cy spos\u00f3b  Pobierz geojson</p> <p>Plik <code>.geojson</code> mo\u017cemy wrzuci\u0107 r\u00f3wnie\u017c do QGIS'a metod\u0105 drag&amp;drop i tam podda\u0107 go dalszej analizie</p>"},{"location":"OpenTripPlanner/#czas-dojazdu-z-wielu-miejsc","title":"Czas dojazdu z wielu miejsc","text":"<p>B\u0119dziemy przeprowadza\u0107 analiz\u0119 dojazdu z wielu punkt\u00f3w do jedengo okre\u015blonego miejsca, dzi\u0119ki automatyzacj\u0105 w j\u0119zyku R wykonamy to zadanie przy u\u017cyciu p\u0119tli <code>for</code></p> <p>Diagram ideowy pomys\u0142u prezentuje si\u0119 nast\u0119puj\u0105co:</p> <p>W pierwszym kroku tworzymy siatk\u0119 heksagonaln\u0105 o oczku 250m.</p> Krok 1 <p>Nast\u0119pnie wybieramy nasz punkt startowy, ja wybra\u0142em miejsce przed wydzia\u0142em budownictwa na Politechnice \u0141\u00f3dzkiej.</p> Krok 2 <p>Nast\u0119pnie generujemy dla ka\u017cdego heksagonu centroidy.</p> Krok 3 <p>Centroidom nadajemy wsp\u00f3\u0142rz\u0119dne geograficzne w postaci d\u0142ugo\u015bci i szeroko\u015bci geograficznej. Pola musz\u0105 nazywa\u0107 si\u0119 lat(latitude) i lon(longitude) Krok 4<pre><code>x(transform($geometry, 'EPSG:2177', 'EPSG:4326'))\ny(transform($geometry, 'EPSG:2177', 'EPSG:4326'))\n</code></pre></p> <p>Ostatecznie nasz skrypt b\u0119dzie dzia\u0142a\u0142 tak jak zosta\u0142o to pokazane na obrazku poni\u017cej</p> Krok 5 <p>W QGISie eksportujemy centroidy do pliku <code>.csv</code>. Punkty opr\u00f3cz wsp\u00f3\u0142rz\u0119dnych musz\u0105 zawiera\u0107 jedno pole numeryczne (mo\u017ce by\u0107 to np. ilo\u015b\u0107 os\u00f3b w heksagonie lub liczba miejsc pracy) Ja sw\u00f3j plik nazwa\u0142em <code>pop.csv</code> ze wzgl\u0119du na to, \u017ce ma zapisan\u0105 liczb\u0119 os\u00f3b mieszkaj\u0105cych w ka\u017cdym heksagonie.</p> Czas dojazdu z wielu miejsc<pre><code>library(\"otpr\")\n\nsetwd(\"C:/Users/Michal/otp_data\") # Set working directory\npop &lt;- read.csv(\"pop.csv\")\nhead(pop)\ntotal &lt;- nrow(pop) # Utworzenie tabeli total\notpcon &lt;- otp_connect()\n# Begin the loop\nfor (i in 1:total) { #Zapytanie ka\u017cdego wiersza w tabeli total\n  response &lt;- otp_get_times(otpcon, \n                            fromPlace = c(pop[i, ]$lat, pop[i, ]$lon), \n                            toPlace = c(51.7474, 19.4518), \n                            mode = \"TRANSIT\", \n                            detail = TRUE, \n                            date = \"11-22-2024\",\n                            time = \"08:30:00\", \n                            maxWalkDistance = 700, \n                            walkReluctance = 5,\n                            minTransferTime = 600)\n\n  # If response is OK update dataframe\n  # Dodanie do tabeli atrybut\u00f3w informacji o parametrach przejazdu\n  if (response$errorId == \"OK\") {\n    pop[i, \"status\"] &lt;- response$errorId\n    pop[i, \"duration\"] &lt;- response$itineraries$duration\n    pop[i, \"transittime\"] &lt;-response$itineraries$transitTime\n    pop[i, \"walktime\"] &lt;-response$itineraries$walkTime\n    pop[i, \"waitingtime\"] &lt;- response$itineraries$waitingTime\n    pop[i, \"transfers\"] &lt;- response$itineraries$transfers\n  } else {\n    # record error\n    pop[i, \"status\"] &lt;- response$errorId\n  }\n}\nwrite.csv(pop, file = \"pop_results2.csv\") # Zapisanie do pliku\n</code></pre> <p>Mapa czas\u00f3w dojazd\u00f3w i ilo\u015bci potrzebnych przesiadek prezentuje si\u0119 w nast\u0119puj\u0105cy spos\u00f3b: </p>"},{"location":"OpenTripPlanner/#one-to-many-analysis","title":"One-to-many analysis","text":"<p>OTP posiada modu\u0142 pozwalaj\u0105cy policzy\u0107 czas dojazdu do wielu r\u00f3\u017cnych punkt\u00f3w. Do obliczenia tego uzyjemy polecenia surface. Mog\u0142oby si\u0119 wydawa\u0107, \u017ce b\u0119dzie to powt\u00f3rzenie poprzedniej analiy, jednak poprzez u\u017cycie surface znacznie skraca nam si\u0119 czas analiy, poniewa\u017c narz\u0119dzie OTP jest w stanie wygenerowa\u0107 surface model mniej wi\u0119cej w takim samym czasie co pojedyncze zapytanie o tras\u0119. Osi\u0105gane jest to przez zapisanie czasu dojazdu do ka\u017cdego miejsca z punktu startowego w kom\u00f3rkach rastra.</p> <p>W celu przeprowadzenia</p>"},{"location":"OpenTripPlanner/#narzedzia-symulacyjne-vissim-tomtom-move","title":"Narz\u0119dzia symulacyjne VISSIM + TomTom MOVE","text":"<p>W budowie</p>"},{"location":"OpenTripPlanner/#zroda","title":"\u0179r\u00f3d\u0142a","text":"<p>W budowie Ta prezentacja napewno by nie powsta\u0142a gdyby nie niesamowita praca wykonana przez u\u017cytkownika marcusyoung i jego bibliotek\u0119 do j\u0119zyka R  oraz poradnik jak korzysta\u0107 z OTP</p>"},{"location":"strona-1/","title":"O mnie","text":"<p>Jestem studentem test test test link do drugiej strony</p>"},{"location":"strona-1/#nagowek","title":"nag\u0142owek","text":""},{"location":"strona-1/#nagowek-2","title":"nag\u0142owek-2","text":""},{"location":"strona-2/","title":"2 strona","text":"<p>test test test link do pierwszej strony</p>"}]}